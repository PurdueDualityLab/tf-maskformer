2023-09-15 21:55:07.376199: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-09-15 21:55:07.516332: I tensorflow/core/util/port.cc:104] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2023-09-15 21:55:07.519823: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcudart.so.11.0'; dlerror: libcudart.so.11.0: cannot open shared object file: No such file or directory
2023-09-15 21:55:07.519867: I tensorflow/compiler/xla/stream_executor/cuda/cudart_stub.cc:29] Ignore above cudart dlerror if you do not have a GPU set up on your machine.
2023-09-15 21:55:08.264805: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory
2023-09-15 21:55:08.264892: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory
2023-09-15 21:55:08.264904: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/opt/conda/envs/maskformer/lib/python3.9/site-packages/tensorflow_addons/utils/tfa_eol_msg.py:23: UserWarning: 

TensorFlow Addons (TFA) has ended development and introduction of new features.
TFA has entered a minimal maintenance and release mode until a planned end of life in May 2024.
Please modify downstream libraries to take dependencies from other repositories in our TensorFlow community (e.g. Keras, Keras-CV, and Keras-NLP). 

For more information see: https://github.com/tensorflow/addons/issues/2807 

  warnings.warn(
2023-09-15 21:55:10.089703: W tensorflow/compiler/xla/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /opt/conda/envs/maskformer/lib/python3.9/site-packages/cv2/../../lib64:
2023-09-15 21:55:10.089761: W tensorflow/compiler/xla/stream_executor/cuda/cuda_driver.cc:265] failed call to cuInit: UNKNOWN ERROR (303)
2023-09-15 21:55:10.089780: I tensorflow/compiler/xla/stream_executor/cuda/cuda_diagnostics.cc:156] kernel driver does not appear to be running on this host (compute-intensive-1): /proc/driver/nvidia/version does not exist
I0915 21:55:10.100669 140248438155072 train_utils.py:359] Final experiment parameters:
{'runtime': {'all_reduce_alg': None,
             'batchnorm_spatial_persistent': False,
             'dataset_num_private_threads': None,
             'default_shard_dim': -1,
             'distribution_strategy': 'one_device',
             'enable_xla': False,
             'gpu_thread_mode': None,
             'loss_scale': None,
             'mixed_precision_dtype': 'float32',
             'num_cores_per_replica': 1,
             'num_gpus': 0,
             'num_packs': 1,
             'per_gpu_thread_count': 0,
             'run_eagerly': False,
             'task_index': -1,
             'tpu': 'tf-debug-3',
             'tpu_enable_xla_dynamic_padder': None,
             'worker_hosts': None},
 'task': {'allow_image_summary': False,
          'annotation_file': '/home/vishalpurohit55595/wexin_detr/tf-maskformer/annotations/instances_val2017.json',
          'differential_privacy_config': None,
          'init_checkpoint': '',
          'init_checkpoint_modules': 'backbone',
          'losses': {'background_cls_weight': 0.1,
                     'class_offset': 0,
                     'l2_weight_decay': 0.0001,
                     'lambda_box': 5.0,
                     'lambda_cls': 1.0,
                     'lambda_giou': 2.0},
          'model': {'backbone': {'resnet': {'bn_trainable': False,
                                            'depth_multiplier': 1.0,
                                            'model_id': 50,
                                            'replace_stem_max_pool': False,
                                            'resnetd_shortcut': False,
                                            'scale_stem': True,
                                            'se_ratio': 0.0,
                                            'stem_type': 'v0',
                                            'stochastic_depth_drop_rate': 0.0},
                                 'type': 'resnet'},
                    'backbone_endpoint_name': '5',
                    'hidden_size': 256,
                    'input_size': [640, 640, 3],
                    'norm_activation': {'activation': 'relu',
                                        'norm_epsilon': 0.001,
                                        'norm_momentum': 0.99,
                                        'use_sync_bn': True},
                    'num_classes': 91,
                    'num_decoder_layers': 6,
                    'num_encoder_layers': 6,
                    'num_queries': 100},
          'name': None,
          'per_category_metrics': False,
          'train_data': {'apply_tf_data_service_before_batching': False,
                         'block_length': 1,
                         'cache': False,
                         'cycle_length': None,
                         'decoder': {'simple_decoder': {'attribute_names': [],
                                                        'mask_binarize_threshold': None,
                                                        'regenerate_source_id': False},
                                     'type': 'simple_decoder'},
                         'deterministic': None,
                         'drop_remainder': True,
                         'dtype': 'bfloat16',
                         'enable_shared_tf_data_service_between_parallel_trainers': False,
                         'enable_tf_data_service': False,
                         'file_type': 'tfrecord',
                         'global_batch_size': 64,
                         'input_path': 'gs://cam2-datasets/coco/train*',
                         'is_training': True,
                         'prefetch_buffer_size': None,
                         'seed': None,
                         'sharding': True,
                         'shuffle_buffer_size': 1000,
                         'tf_data_service_address': None,
                         'tf_data_service_job_name': None,
                         'tfds_as_supervised': False,
                         'tfds_data_dir': '',
                         'tfds_name': '',
                         'tfds_skip_decoding_feature': '',
                         'tfds_split': 'train',
                         'trainer_id': None},
          'validation_data': {'apply_tf_data_service_before_batching': False,
                              'block_length': 1,
                              'cache': False,
                              'cycle_length': None,
                              'decoder': {'simple_decoder': {'attribute_names': [],
                                                             'mask_binarize_threshold': None,
                                                             'regenerate_source_id': False},
                                          'type': 'simple_decoder'},
                              'deterministic': None,
                              'drop_remainder': False,
                              'dtype': 'bfloat16',
                              'enable_shared_tf_data_service_between_parallel_trainers': False,
                              'enable_tf_data_service': False,
                              'file_type': 'tfrecord',
                              'global_batch_size': 2,
                              'input_path': 'gs://cam2-datasets/coco/val*',
                              'is_training': False,
                              'prefetch_buffer_size': None,
                              'seed': None,
                              'sharding': True,
                              'shuffle_buffer_size': 10000,
                              'tf_data_service_address': None,
                              'tf_data_service_job_name': None,
                              'tfds_as_supervised': False,
                              'tfds_data_dir': '',
                              'tfds_name': '',
                              'tfds_skip_decoding_feature': '',
                              'tfds_split': 'train',
                              'trainer_id': None}},
 'trainer': {'allow_tpu_summary': False,
             'best_checkpoint_eval_metric': 'AP',
             'best_checkpoint_export_subdir': 'best_ckpt',
             'best_checkpoint_metric_comp': 'higher',
             'checkpoint_interval': 1848,
             'continuous_eval_timeout': 3600,
             'eval_tf_function': True,
             'eval_tf_while_loop': False,
             'loss_upper_bound': 1000000.0,
             'max_to_keep': 1,
             'optimizer_config': {'ema': None,
                                  'learning_rate': {'stepwise': {'boundaries': [369600],
                                                                 'name': 'PiecewiseConstantDecay',
                                                                 'offset': 0,
                                                                 'values': [0.0001,
                                                                            1e-05]},
                                                    'type': 'stepwise'},
                                  'optimizer': {'detr_adamw': {'amsgrad': False,
                                                               'beta_1': 0.9,
                                                               'beta_2': 0.999,
                                                               'clipnorm': None,
                                                               'clipvalue': None,
                                                               'epsilon': 1e-07,
                                                               'exclude_from_weight_decay': None,
                                                               'global_clipnorm': 0.1,
                                                               'gradient_clip_norm': 0.0,
                                                               'include_in_weight_decay': None,
                                                               'name': 'AdamWeightDecay',
                                                               'weight_decay_rate': 0.0001},
                                                'type': 'detr_adamw'},
                                  'warmup': {'type': None}},
             'preemption_on_demand_checkpoint': True,
             'recovery_begin_steps': 0,
             'recovery_max_trials': 0,
             'steps_per_loop': 1848,
             'summary_interval': 1848,
             'train_steps': 554400,
             'train_tf_function': True,
             'train_tf_while_loop': True,
             'validation_interval': 9240,
             'validation_steps': 78,
             'validation_summary_subdir': 'validation'}}
I0915 21:55:10.101051 140248438155072 train_utils.py:371] Saving experiment configuration to gs://cam2-models/detr_exp2/params.yaml
2023-09-15 21:55:10.355014: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 AVX512F AVX512_VNNI FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
I0915 21:55:10.559704 140248438155072 train_utils.py:98] Created the best checkpoint exporter. data_dir: gs://cam2-models/detr_exp2, export_subdir: best_ckpt, metric_name: AP
I0915 21:55:10.560240 140248438155072 train_utils.py:245] Running default trainer.
I0915 21:55:11.823471 140248438155072 legacy_adamw.py:56] AdamWeightDecay gradient_clip_norm=0.000000
WARNING:tensorflow:From /opt/conda/envs/maskformer/lib/python3.9/site-packages/tensorflow/python/autograph/pyct/static_analysis/liveness.py:83: Analyzer.lamba_check (from tensorflow.python.autograph.pyct.static_analysis.liveness) is deprecated and will be removed after 2023-09-23.
Instructions for updating:
Lambda fuctions will be no more assumed to be used in the statement where they are used, or at least in the same block. https://github.com/tensorflow/tensorflow/issues/56089
W0915 21:55:13.880414 140248438155072 deprecation.py:350] From /opt/conda/envs/maskformer/lib/python3.9/site-packages/tensorflow/python/autograph/pyct/static_analysis/liveness.py:83: Analyzer.lamba_check (from tensorflow.python.autograph.pyct.static_analysis.liveness) is deprecated and will be removed after 2023-09-23.
Instructions for updating:
Lambda fuctions will be no more assumed to be used in the statement where they are used, or at least in the same block. https://github.com/tensorflow/tensorflow/issues/56089
I0915 21:55:16.336236 140248438155072 controller.py:431] restoring or initializing model...
I0915 21:56:42.481205 140248438155072 controller.py:435] restored model from gs://cam2-models/detr_exp2/ckpt-425040.
I0915 21:56:42.481413 140248438155072 controller.py:237] restored from checkpoint: gs://cam2-models/detr_exp2/ckpt-425040
I0915 21:56:42.481476 140248438155072 train_lib.py:255] Starts to execute mode: train
I0915 21:56:42.481830 140248438155072 controller.py:256] train | step:  425040 | training until step 554400...
2023-09-15 21:56:43.128394: W tensorflow/core/framework/dataset.cc:769] Input of GeneratorDatasetOp::Dataset will not be optimized because the dataset does not implement the AsGraphDefInternal() method needed to apply optimizations.
